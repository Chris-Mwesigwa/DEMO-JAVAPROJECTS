package android;

import java.io.File;
import java.io.FileWriter;
import java.util.*;

public class LISTS {

	public static void main(String[] args) {
	
		/*
	balls<String> = "hello";
	balls<String> hello = new String;
	//linkedLists
		
	LinkedList<String> list = new LinkedList<String>();
	
	list.offer("winniefred");
	list.offer("chris");
	list.offer("Shakirah");
	list.offer("ApioSarah");
	list.offer("Faith");
	list.offer("Lilian");
	list.add("my new IPhone");
	
	//list.pop();
	list.peek();
	list.element();
	list.addLast("LifeMakers");
	list.addFirst("TheseAreTheOnes");
	
	
	
	System.out.println(list.element());
	System.out.println(list);
	
	//queue
	
	Queue<String> y = new LinkedList<String>();
	
	y.add("faith");
	y.poll();
	
	System.out.println(y);
	
	
	
	//stacks
	
	Stack<String> st = new Stack<String>();
	
	st.add("hello stack");
	st.push("i got you covered");
	st.push("java collection");
	
	st.pop();
	st.peek();
	
	
	System.out.println(st.capacity());
	System.out.println(st);
	
	//arrayLists
	
	ArrayList<Double> Al = new ArrayList<Double>();
	Al.add(5.6);
	Al.add(9.0);
	Al.add(5.3);
	Al.add(6.6);
	Al.add(4.7);
	
	System.out.println(Al.contains(5.3));
	
	//coding challenge
	
	String s = "am a programmer";
	System.out.println(s.length());
	System.out.println(s.charAt(3));
	System.out.println(s.substring(2, 12));
	System.out.println(s.substring(5));
	System.out.println(s.codePointAt(3));
	System.out.println(s.replace("gra", "ble"));
	System.out.println(s.contentEquals("am a programmer"));
	
	
	
	//harsh table
	
	Hashtable<Integer,String> h = new Hashtable<Integer, String>();
	
	h.put(3, "christopher");
	h.put(5, "Vickie");
	h.put(1, "Hope");
	h.put(4, "Immaculate");
	
	
	System.out.println(h);
	System.out.println(h.replace(1, "Hope", "Apls"));
	System.out.println(h.replace(5, "Victo"));
	
	//line break
	System.out.println();
	
	//HarshMap
	HashMap<Integer, String> m = new HashMap<>();
	
	m.putAll(m);
	m.put(3, "christopher");
	m.put(5, "Vickie");
	m.put(1, "Hope");
	m.put(4, "Immaculate");
	
	System.out.println(m);
	
	
	//ternary operator
	int age = 56;
	String sst ;
	
	sst =
	age > 60 ?
			 "Eligible" : "ineligible";
	
	
	System.out.println(sst);
	
	
	
	//random_numbers
	
	/*Random random = new Random(4);
	*
	*double v = random.nextInt(5)+2;
	*System.out.println(sst.indexOf("lig"));
	*
	
	class password{
		Scanner p =  new Scanner(System.in);
		//System.out.println("enter password");
		String pas = p.nextLine();
		@SuppressWarnings("unlikely-arg-type")
		Boolean access = 
				p.equals("aplexy") ?
						true : false;
	
	} num[] = {2,5,7,9,4};
	for(int i = (num.length-1);i>=0;i--){
		System.out.print(num[i]);
	}
	*/
	System.out.println();
	
	Scanner sc = new Scanner(System.in);
	
	System.out.println("Enter pass code");
	String Code = sc.nextLine();
	
	try {
	System.out.println(login(Code));
	}catch(Exception e) {
		System.out.println(e);
	}finally {
		System.out.println("successifuly compiled");
	}
	
	//File creation & writing
	try {
	File file = new File("C:\\Users\\ENTERTAINMENT\\desktop\\file1.doc");
	FileWriter write = new  FileWriter(file);
	}catch(Exception e) {
		System.out.println(e);
	}finally {
		System.out.println("Compile successiful "+Code);
	}

}
	
	
	 static String login(String pass) {
			if(pass.contentEquals("APLEXY")) { 
				return "Successiful";
			}
			else {
				return "try again";
			}
			
		}
		

}
